[gd_scene load_steps=50 format=2]

[ext_resource path="res://levelScene/floorGenerator.gd" type="Script" id=1]
[ext_resource path="res://playerScene/frog.tscn" type="PackedScene" id=2]
[ext_resource path="res://playerScripts/stateMachineController.gd" type="Script" id=3]
[ext_resource path="res://worldGeneration/script/World.gd" type="Script" id=4]
[ext_resource path="res://assets/rain.png" type="Texture" id=5]
[ext_resource path="res://assets/music/rain_loop.wav" type="AudioStream" id=6]
[ext_resource path="res://enviornmentComponents/water/water.gd" type="Script" id=7]
[ext_resource path="res://NPCs/NPC.gd" type="Script" id=8]
[ext_resource path="res://enviornmentComponents/spikes/spikes.gd" type="Script" id=9]
[ext_resource path="res://assets/music/smallJump.wav" type="AudioStream" id=10]
[ext_resource path="res://assets/music/largeJump.wav" type="AudioStream" id=11]
[ext_resource path="res://assets/music/drowning.wav" type="AudioStream" id=12]
[ext_resource path="res://assets/music/spikeDeath.wav" type="AudioStream" id=13]
[ext_resource path="res://assets/music/aligatorBite.wav" type="AudioStream" id=14]
[ext_resource path="res://assets/music/eatcrunchy.wav" type="AudioStream" id=15]
[ext_resource path="res://assets/waterBg.png" type="Texture" id=16]
[ext_resource path="res://assets/topLayer.png" type="Texture" id=17]
[ext_resource path="res://assets/middleLayer.png" type="Texture" id=18]
[ext_resource path="res://assets/waves.png" type="Texture" id=19]
[ext_resource path="res://assets/bottomWave.png" type="Texture" id=20]
[ext_resource path="res://assets/bg.png" type="Texture" id=21]
[ext_resource path="res://assets/mainmenuePressed.png" type="Texture" id=22]
[ext_resource path="res://assets/restartPressed.png" type="Texture" id=23]
[ext_resource path="res://assets/restart.png" type="Texture" id=24]
[ext_resource path="res://assets/mainmenueUnpressed.png" type="Texture" id=25]
[ext_resource path="res://assets/scoreCard.png" type="Texture" id=26]
[ext_resource path="res://menue/scripts/GameOverMenue.gd" type="Script" id=27]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float speed = 1.0;
uniform sampler2D texture;

void fragment() {
    vec2 uv = SCREEN_UV;
    uv -= vec2(TIME * speed, -TIME * speed);

    vec4 color = texture(TEXTURE, uv);
	color.a = 0.2;
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/speed = 1.0

[sub_resource type="Shader" id=12]
code = "shader_type canvas_item;

uniform float scroll_speed = 0.2;

void fragment() {
    // Calculate the texture coordinates based on the scroll speed
    vec2 uv = UV - vec2(scroll_speed * sin(TIME), 0.0);
    
    // Wrap the texture coordinates to create a seamless scrolling effect
    uv.x = fract(uv.x);
    
    // Sample the texture
    vec4 color = texture(TEXTURE, uv);
    
    // Output the final color
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/scroll_speed = 0.2

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

uniform vec2 resolution;


void fragment() {
	vec2 pixelSize = 5.0 / resolution;
	vec2 pixelCoords = floor(UV / pixelSize) * pixelSize;
	
	float amplitude = 0.2;
	float frequency = 10.0;
	float speed = 0.3;
	vec2 uv = UV;
	float distortion = sin(pixelCoords.y * frequency + TIME * speed) * amplitude;
	uv.x += distortion;
	vec4 color = texture(TEXTURE, uv);
	COLOR =color;

}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/resolution = Vector2( 896, 64 )

[sub_resource type="Shader" id=4]

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform vec2 resolution;


void fragment() {
	vec2 pixelSize = 5.0 / resolution;
	vec2 pixelCoords = floor(UV / pixelSize) * pixelSize;
	
	float amplitude = 0.2;
	float frequency = 10.0;
	float speed = 1.0;
	vec2 uv = UV;
	float distortion = sin(pixelCoords.y * frequency + TIME * speed) * amplitude;
	uv.x += distortion;
	vec4 color = texture(TEXTURE, uv);
	COLOR =color;

}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/resolution = Vector2( 896, 64 )

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform vec2 resolution;


void fragment() {
	vec2 pixelSize = 5.0 / resolution;
	vec2 pixelCoords = floor(UV / pixelSize) * pixelSize;
	
	float amplitude = 0.2;
	float frequency = 10.0;
	float speed = 1.0;
	vec2 uv = UV;
	float distortion = sin(pixelCoords.y * frequency + TIME * speed) * amplitude;
	uv.x += distortion;
	vec4 color = texture(TEXTURE, uv);
	COLOR =color;

}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/resolution = Vector2( 896, 64 )

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;

uniform float scroll_speed = 0.05;

void fragment() {
    // Calculate the texture coordinates based on the scroll speed
    vec2 uv = UV - vec2(scroll_speed * sin(TIME), 0.0);
    
    // Wrap the texture coordinates to create a seamless scrolling effect
    uv.x = fract(uv.x);
    
    // Sample the texture
    vec4 color = texture(TEXTURE, uv);
    
    // Output the final color
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/scroll_speed = 0.05

[sub_resource type="RectangleShape2D" id=3]

[sub_resource type="StreamTexture" id=23]
load_path = "res://.import/cloud.png-340b51e0abba4332fd951ca5dde808e2.stex"

[sub_resource type="Shader" id=21]
code = "shader_type canvas_item;

uniform float scroll_speed = 0.05;

void fragment() {
    // Calculate the texture coordinates based on the scroll speed
    vec2 uv = UV - vec2(-pow(scroll_speed,2.0) * TIME, 0.0);
    
    // Wrap the texture coordinates to create a seamless scrolling effect
    uv.x = fract(uv.x);
    
    // Sample the texture
    vec4 color = texture(TEXTURE, uv);
    color.a = color.a/2.0;
    // Output the final color
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 21 )
shader_param/scroll_speed = 0.15

[sub_resource type="StreamTexture" id=18]
load_path = "res://.import/cloud.png-340b51e0abba4332fd951ca5dde808e2.stex"

[sub_resource type="Shader" id=22]
code = "shader_type canvas_item;

uniform float scroll_speed = 0.04;

void fragment() {
    // Calculate the texture coordinates based on the scroll speed
    vec2 uv = UV - vec2( TIME*pow(scroll_speed,2), 0.0);
    
    // Wrap the texture coordinates to create a seamless scrolling effect
    uv.x = fract(uv.x);
    
    // Sample the texture
    vec4 color = texture(TEXTURE, uv);
    color.a = color.a/1.5;
    // Output the final color
    COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 22 )
shader_param/scroll_speed = 0.15

[sub_resource type="StreamTexture" id=20]
load_path = "res://.import/cloud.png-340b51e0abba4332fd951ca5dde808e2.stex"

[node name="World" type="Node2D"]
position = Vector2( -1, 0 )
script = ExtResource( 4 )

[node name="floor" type="Node2D" parent="."]
z_index = 2
script = ExtResource( 1 )

[node name="frog" parent="." instance=ExtResource( 2 )]
z_index = 50

[node name="stateMachineController" type="Node" parent="frog"]
script = ExtResource( 3 )

[node name="smalljumpsfx" type="AudioStreamPlayer" parent="frog"]
stream = ExtResource( 10 )
volume_db = -10.0

[node name="largejumpsfx" type="AudioStreamPlayer2D" parent="frog"]
stream = ExtResource( 11 )

[node name="drowning" type="AudioStreamPlayer2D" parent="frog"]
stream = ExtResource( 12 )
volume_db = 11.361

[node name="spikedeath" type="AudioStreamPlayer2D" parent="frog"]
stream = ExtResource( 13 )
volume_db = 11.361

[node name="aligatorbite" type="AudioStreamPlayer2D" parent="frog"]
stream = ExtResource( 14 )

[node name="NPC" type="Node2D" parent="."]
z_index = 1000
script = ExtResource( 8 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
input_pass_on_modal_close_click = false

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 896, 896 )
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="CanvasLayer" type="CanvasLayer" parent="ViewportContainer/Viewport"]
follow_viewport_enable = true

[node name="bg2" type="Sprite" parent="ViewportContainer/Viewport/CanvasLayer"]
position = Vector2( 448, 448 )
texture = ExtResource( 21 )

[node name="TextureRect" type="TextureRect" parent="ViewportContainer/Viewport/CanvasLayer"]
material = SubResource( 2 )
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
texture = ExtResource( 5 )
stretch_mode = 2

[node name="bg" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 6 )
volume_db = -10.488
autoplay = true

[node name="water" type="Node2D" parent="."]
script = ExtResource( 7 )

[node name="waves" type="Sprite" parent="water"]
material = SubResource( 13 )
position = Vector2( -1, -106 )
texture = ExtResource( 19 )

[node name="toplayer" type="Sprite" parent="water"]
material = SubResource( 7 )
position = Vector2( -1, -75 )
texture = ExtResource( 17 )

[node name="bg" type="Sprite" parent="water"]
material = SubResource( 5 )
texture = ExtResource( 16 )

[node name="middleLayer1" type="Sprite" parent="water"]
material = SubResource( 9 )
texture = ExtResource( 18 )

[node name="middleLayer2" type="Sprite" parent="water"]
material = SubResource( 11 )
position = Vector2( 0, 64 )
texture = ExtResource( 18 )

[node name="bottomwave" type="Sprite" parent="water"]
material = SubResource( 15 )
position = Vector2( -1, 49 )
texture = ExtResource( 20 )

[node name="waterArea" type="Area2D" parent="water"]
collision_layer = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="water/waterArea"]
shape = SubResource( 3 )

[node name="spikes" type="Node2D" parent="."]
script = ExtResource( 9 )

[node name="cloud" type="Node2D" parent="."]
position = Vector2( 448, 37 )

[node name="cloud3" type="Sprite" parent="cloud"]
modulate = Color( 0.388235, 0.34902, 0.34902, 0.647059 )
position = Vector2( 161, 59 )
texture = SubResource( 23 )

[node name="cloud4" type="Sprite" parent="cloud"]
modulate = Color( 0.376471, 0.360784, 0.360784, 1 )
position = Vector2( 1, 27 )
texture = SubResource( 23 )

[node name="cloud" type="Sprite" parent="cloud"]
material = SubResource( 17 )
position = Vector2( 0, -5 )
texture = SubResource( 18 )

[node name="cloud2" type="Sprite" parent="cloud"]
material = SubResource( 19 )
position = Vector2( 0, 27 )
texture = SubResource( 20 )

[node name="scorecard" type="Sprite" parent="."]
position = Vector2( 97, 96 )
texture = ExtResource( 26 )

[node name="score" type="Label" parent="."]
margin_top = 64.0
margin_right = 43.0
margin_bottom = 78.0
rect_scale = Vector2( 2, 2 )
text = "Score: "

[node name="highScore" type="Label" parent="."]
margin_top = 96.0
margin_right = 68.0
margin_bottom = 110.0
rect_scale = Vector2( 2, 2 )
text = "High Score"

[node name="gameOver" type="Label" parent="."]
visible = false
margin_left = 257.0
margin_top = 192.0
margin_right = 330.0
margin_bottom = 206.0
rect_scale = Vector2( 5, 5 )
text = "Game Over"

[node name="reason" type="Label" parent="."]
visible = false
margin_left = 353.0
margin_top = 256.0
margin_right = 514.0
margin_bottom = 270.0
text = "you were killed by spikes"

[node name="scoreeat" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 15 )
volume_db = 24.0

[node name="gameovermenue" type="Node2D" parent="."]
visible = false
position = Vector2( 33, -288 )
z_index = 100

[node name="Control" type="Control" parent="gameovermenue"]
margin_left = 32.0
margin_top = 192.0
margin_right = 72.0
margin_bottom = 232.0
script = ExtResource( 27 )

[node name="VBoxContainer" type="VBoxContainer" parent="gameovermenue/Control"]
margin_left = 257.0
margin_top = 384.0
margin_right = 657.0
margin_bottom = 796.0
rect_scale = Vector2( 0.5, 0.5 )

[node name="restart" type="TextureButton" parent="gameovermenue/Control/VBoxContainer"]
margin_right = 400.0
margin_bottom = 200.0
texture_normal = ExtResource( 24 )
texture_pressed = ExtResource( 23 )

[node name="mainMenue" type="TextureButton" parent="gameovermenue/Control/VBoxContainer"]
margin_top = 204.0
margin_right = 400.0
margin_bottom = 404.0
texture_normal = ExtResource( 25 )
texture_pressed = ExtResource( 22 )

[connection signal="body_entered" from="water/waterArea" to="frog" method="_on_waterArea_body_entered"]
[connection signal="button_up" from="gameovermenue/Control/VBoxContainer/restart" to="gameovermenue/Control" method="_on_restart_button_up"]
[connection signal="button_up" from="gameovermenue/Control/VBoxContainer/mainMenue" to="gameovermenue/Control" method="_on_mainMenue_button_up"]
